# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: remote.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0cremote.proto\x12\tremote.v1\"\x8b\x01\n\x08\x45nvelope\x12\'\n\x08register\x18\x01 \x01(\x0b\x32\x13.remote.v1.RegisterH\x00\x12+\n\nderegister\x18\x02 \x01(\x0b\x32\x15.remote.v1.DeregisterH\x00\x12!\n\x05route\x18\x03 \x01(\x0b\x32\x10.remote.v1.RouteH\x00\x42\x06\n\x04kind\"2\n\x08Register\x12\x0f\n\x07network\x18\x01 \x01(\t\x12\x15\n\rsrv6_endpoint\x18\x02 \x01(\t\"4\n\nDeregister\x12\x0f\n\x07network\x18\x01 \x01(\t\x12\x15\n\rsrv6_endpoint\x18\x02 \x01(\t\"\x8e\x01\n\x05Route\x12\x0f\n\x07network\x18\x01 \x01(\t\x12\x15\n\rsrv6_endpoint\x18\x02 \x01(\t\x12\x15\n\rsrv6_segments\x18\x03 \x03(\t\x12\'\n\x06status\x18\x04 \x01(\x0e\x32\x17.remote.v1.Route.Status\"\x1d\n\x06Status\x12\x07\n\x03\x41\x44\x44\x10\x00\x12\n\n\x06\x44\x45LETE\x10\x01\x42\x39Z7github.com/datum-cloud/galactic-agent/api/remote;remoteb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'remote_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z7github.com/datum-cloud/galactic-agent/api/remote;remote'
  _ENVELOPE._serialized_start=28
  _ENVELOPE._serialized_end=167
  _REGISTER._serialized_start=169
  _REGISTER._serialized_end=219
  _DEREGISTER._serialized_start=221
  _DEREGISTER._serialized_end=273
  _ROUTE._serialized_start=276
  _ROUTE._serialized_end=418
  _ROUTE_STATUS._serialized_start=389
  _ROUTE_STATUS._serialized_end=418
# @@protoc_insertion_point(module_scope)
